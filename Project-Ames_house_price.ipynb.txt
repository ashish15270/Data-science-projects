{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.8"
    },
    "colab": {
      "name": "Ames_Udemy.ipynb",
      "provenance": [],
      "collapsed_sections": [
        "908a578a",
        "1bd9ff76",
        "27019d3a",
        "dfb8df9e",
        "43d121bf"
      ]
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f1fa3fa6"
      },
      "source": [
        "# <center style=\"font-family:Arial\">1. Introduction </center>\n",
        "\n",
        "<div class=\"alert alert-block alert-info\"\n",
        "     style=\"color:black;\n",
        "           display:fill;\n",
        "           background-color:#e8f4f8;\n",
        "           font-size:130%;\n",
        "           font-family:Arial\"><center>\n",
        "<b> ðŸ“Œ My goal is to predict, in the best possible way, the sales price of the houses based on their characteristics using different linear regression models.</b></center>\n",
        "    </div>\n",
        "    \n",
        " <div style=\"color:black;\n",
        "           font-size:120%;\n",
        "           font-family:Arial\">\n",
        "In this notebook, I'll be working with the Ames Housing dataset, a complete dataset containing every aspect of residential homes in Ames, Iowa. If you want to know more about the data, you can click <a href=\"https://www.kaggle.com/c/house-prices-advanced-regression-techniques/data\" target=\"_blank\"> here</a>.\n",
        "</div>\n",
        "\n",
        "** note I have obtained complete train and test dataset from a udemy course. The above link is just for reference.\n"
      ],
      "id": "f1fa3fa6"
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e275604e"
      },
      "source": [
        "## <center style=\"font-family:Arial\">Importing the Data </center>\n",
        "\n"
      ],
      "id": "e275604e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b6e97b20"
      },
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ],
      "id": "b6e97b20",
      "execution_count": 140,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0bd0fd97"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "id": "0bd0fd97",
      "execution_count": 141,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "94fbb6cc"
      },
      "source": [
        "## <center> 1. Importing the dataset <center>"
      ],
      "id": "94fbb6cc"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "omobeq2HT3Ea",
        "outputId": "e652ff68-ef2a-4804-f4ca-c344bf8f74a7"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "id": "omobeq2HT3Ea",
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 308
        },
        "id": "006bed2e",
        "outputId": "aebf306c-c7ad-41e0-8924-c8b6da286fed"
      },
      "source": [
        "df = pd.read_csv(\"/content/drive/MyDrive/UNZIP_FOR_NOTEBOOKS_FINAL/DATA/Ames_Housing_Data.csv\")\n",
        "df.head()"
      ],
      "id": "006bed2e",
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PID</th>\n",
              "      <th>MS SubClass</th>\n",
              "      <th>MS Zoning</th>\n",
              "      <th>Lot Frontage</th>\n",
              "      <th>Lot Area</th>\n",
              "      <th>Street</th>\n",
              "      <th>Alley</th>\n",
              "      <th>Lot Shape</th>\n",
              "      <th>Land Contour</th>\n",
              "      <th>Utilities</th>\n",
              "      <th>Lot Config</th>\n",
              "      <th>Land Slope</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>Condition 1</th>\n",
              "      <th>Condition 2</th>\n",
              "      <th>Bldg Type</th>\n",
              "      <th>House Style</th>\n",
              "      <th>Overall Qual</th>\n",
              "      <th>Overall Cond</th>\n",
              "      <th>Year Built</th>\n",
              "      <th>Year Remod/Add</th>\n",
              "      <th>Roof Style</th>\n",
              "      <th>Roof Matl</th>\n",
              "      <th>Exterior 1st</th>\n",
              "      <th>Exterior 2nd</th>\n",
              "      <th>Mas Vnr Type</th>\n",
              "      <th>Mas Vnr Area</th>\n",
              "      <th>Exter Qual</th>\n",
              "      <th>Exter Cond</th>\n",
              "      <th>Foundation</th>\n",
              "      <th>Bsmt Qual</th>\n",
              "      <th>Bsmt Cond</th>\n",
              "      <th>Bsmt Exposure</th>\n",
              "      <th>BsmtFin Type 1</th>\n",
              "      <th>BsmtFin SF 1</th>\n",
              "      <th>BsmtFin Type 2</th>\n",
              "      <th>BsmtFin SF 2</th>\n",
              "      <th>Bsmt Unf SF</th>\n",
              "      <th>Total Bsmt SF</th>\n",
              "      <th>Heating</th>\n",
              "      <th>...</th>\n",
              "      <th>Central Air</th>\n",
              "      <th>Electrical</th>\n",
              "      <th>1st Flr SF</th>\n",
              "      <th>2nd Flr SF</th>\n",
              "      <th>Low Qual Fin SF</th>\n",
              "      <th>Gr Liv Area</th>\n",
              "      <th>Bsmt Full Bath</th>\n",
              "      <th>Bsmt Half Bath</th>\n",
              "      <th>Full Bath</th>\n",
              "      <th>Half Bath</th>\n",
              "      <th>Bedroom AbvGr</th>\n",
              "      <th>Kitchen AbvGr</th>\n",
              "      <th>Kitchen Qual</th>\n",
              "      <th>TotRms AbvGrd</th>\n",
              "      <th>Functional</th>\n",
              "      <th>Fireplaces</th>\n",
              "      <th>Fireplace Qu</th>\n",
              "      <th>Garage Type</th>\n",
              "      <th>Garage Yr Blt</th>\n",
              "      <th>Garage Finish</th>\n",
              "      <th>Garage Cars</th>\n",
              "      <th>Garage Area</th>\n",
              "      <th>Garage Qual</th>\n",
              "      <th>Garage Cond</th>\n",
              "      <th>Paved Drive</th>\n",
              "      <th>Wood Deck SF</th>\n",
              "      <th>Open Porch SF</th>\n",
              "      <th>Enclosed Porch</th>\n",
              "      <th>3Ssn Porch</th>\n",
              "      <th>Screen Porch</th>\n",
              "      <th>Pool Area</th>\n",
              "      <th>Pool QC</th>\n",
              "      <th>Fence</th>\n",
              "      <th>Misc Feature</th>\n",
              "      <th>Misc Val</th>\n",
              "      <th>Mo Sold</th>\n",
              "      <th>Yr Sold</th>\n",
              "      <th>Sale Type</th>\n",
              "      <th>Sale Condition</th>\n",
              "      <th>SalePrice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>526301100</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>141.0</td>\n",
              "      <td>31770</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>1960</td>\n",
              "      <td>1960</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>Plywood</td>\n",
              "      <td>Stone</td>\n",
              "      <td>112.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Gd</td>\n",
              "      <td>BLQ</td>\n",
              "      <td>639.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>441.0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1656</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1656</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>7</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1960.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>528.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>P</td>\n",
              "      <td>210</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>215000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>526350040</td>\n",
              "      <td>20</td>\n",
              "      <td>RH</td>\n",
              "      <td>80.0</td>\n",
              "      <td>11622</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Feedr</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>1961</td>\n",
              "      <td>1961</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>Rec</td>\n",
              "      <td>468.0</td>\n",
              "      <td>LwQ</td>\n",
              "      <td>144.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>896</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>896</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>5</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1961.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>730.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>526351010</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>81.0</td>\n",
              "      <td>14267</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>1958</td>\n",
              "      <td>1958</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>108.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>923.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>406.0</td>\n",
              "      <td>1329.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1329</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1329</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1958.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>393</td>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Gar2</td>\n",
              "      <td>12500</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>172000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>526353030</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>93.0</td>\n",
              "      <td>11160</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>1968</td>\n",
              "      <td>1968</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>1065.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1045.0</td>\n",
              "      <td>2110.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>2110</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2110</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>8</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1968.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>522.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>244000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>527105010</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>74.0</td>\n",
              "      <td>13830</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Gilbert</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1997</td>\n",
              "      <td>1998</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>791.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>137.0</td>\n",
              "      <td>928.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>928</td>\n",
              "      <td>701</td>\n",
              "      <td>0</td>\n",
              "      <td>1629</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1997.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>482.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>212</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>189900</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 81 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         PID  MS SubClass MS Zoning  ...  Sale Type  Sale Condition SalePrice\n",
              "0  526301100           20        RL  ...        WD           Normal    215000\n",
              "1  526350040           20        RH  ...        WD           Normal    105000\n",
              "2  526351010           20        RL  ...        WD           Normal    172000\n",
              "3  526353030           20        RL  ...        WD           Normal    244000\n",
              "4  527105010           60        RL  ...        WD           Normal    189900\n",
              "\n",
              "[5 rows x 81 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "601cb90a"
      },
      "source": [
        "## <center> 2. E.D.A. <center>"
      ],
      "id": "601cb90a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 888
        },
        "id": "a3ade1d4",
        "outputId": "d16986f9-4894-4532-fb1b-c35441e4eff2"
      },
      "source": [
        "corr = df.corr()['SalePrice'].sort_values(ascending=False).to_frame()\n",
        "corr = corr.iloc[1:-1,:] # getting rid of PID and SalePrice,Considering only numerical values\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(15,15))\n",
        "plt.barh(corr.index,corr.SalePrice, color = np.where(corr['SalePrice'] < 0, '#EE4B2B', '#89CFF0'))\n",
        "ax.set_title( \"Correlation of SalePrice with other Features\", size=24, color=\"grey\", fontweight=\"bold\");"
      ],
      "id": "a3ade1d4",
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x1080 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cb1d5848",
        "outputId": "257f4042-fe28-4bba-8386-7b21941e1965"
      },
      "source": [
        "print('Top correlated features: \\n ',corr.iloc[:3,:])  # Removing outliers by visual inspection of top correlated numerical features"
      ],
      "id": "cb1d5848",
      "execution_count": 145,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top correlated features: \n",
            "                SalePrice\n",
            "Overall Qual   0.799262\n",
            "Gr Liv Area    0.706780\n",
            "Garage Cars    0.647877\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "60bdf15b"
      },
      "source": [
        "## <center> 3. Data Cleaning<center>"
      ],
      "id": "60bdf15b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9e56ac3a",
        "outputId": "f8599df1-c7ea-41df-e162-5178661c7452"
      },
      "source": [
        "df.info()"
      ],
      "id": "9e56ac3a",
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2930 entries, 0 to 2929\n",
            "Data columns (total 81 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   PID              2930 non-null   int64  \n",
            " 1   MS SubClass      2930 non-null   int64  \n",
            " 2   MS Zoning        2930 non-null   object \n",
            " 3   Lot Frontage     2440 non-null   float64\n",
            " 4   Lot Area         2930 non-null   int64  \n",
            " 5   Street           2930 non-null   object \n",
            " 6   Alley            198 non-null    object \n",
            " 7   Lot Shape        2930 non-null   object \n",
            " 8   Land Contour     2930 non-null   object \n",
            " 9   Utilities        2930 non-null   object \n",
            " 10  Lot Config       2930 non-null   object \n",
            " 11  Land Slope       2930 non-null   object \n",
            " 12  Neighborhood     2930 non-null   object \n",
            " 13  Condition 1      2930 non-null   object \n",
            " 14  Condition 2      2930 non-null   object \n",
            " 15  Bldg Type        2930 non-null   object \n",
            " 16  House Style      2930 non-null   object \n",
            " 17  Overall Qual     2930 non-null   int64  \n",
            " 18  Overall Cond     2930 non-null   int64  \n",
            " 19  Year Built       2930 non-null   int64  \n",
            " 20  Year Remod/Add   2930 non-null   int64  \n",
            " 21  Roof Style       2930 non-null   object \n",
            " 22  Roof Matl        2930 non-null   object \n",
            " 23  Exterior 1st     2930 non-null   object \n",
            " 24  Exterior 2nd     2930 non-null   object \n",
            " 25  Mas Vnr Type     2907 non-null   object \n",
            " 26  Mas Vnr Area     2907 non-null   float64\n",
            " 27  Exter Qual       2930 non-null   object \n",
            " 28  Exter Cond       2930 non-null   object \n",
            " 29  Foundation       2930 non-null   object \n",
            " 30  Bsmt Qual        2850 non-null   object \n",
            " 31  Bsmt Cond        2850 non-null   object \n",
            " 32  Bsmt Exposure    2847 non-null   object \n",
            " 33  BsmtFin Type 1   2850 non-null   object \n",
            " 34  BsmtFin SF 1     2929 non-null   float64\n",
            " 35  BsmtFin Type 2   2849 non-null   object \n",
            " 36  BsmtFin SF 2     2929 non-null   float64\n",
            " 37  Bsmt Unf SF      2929 non-null   float64\n",
            " 38  Total Bsmt SF    2929 non-null   float64\n",
            " 39  Heating          2930 non-null   object \n",
            " 40  Heating QC       2930 non-null   object \n",
            " 41  Central Air      2930 non-null   object \n",
            " 42  Electrical       2929 non-null   object \n",
            " 43  1st Flr SF       2930 non-null   int64  \n",
            " 44  2nd Flr SF       2930 non-null   int64  \n",
            " 45  Low Qual Fin SF  2930 non-null   int64  \n",
            " 46  Gr Liv Area      2930 non-null   int64  \n",
            " 47  Bsmt Full Bath   2928 non-null   float64\n",
            " 48  Bsmt Half Bath   2928 non-null   float64\n",
            " 49  Full Bath        2930 non-null   int64  \n",
            " 50  Half Bath        2930 non-null   int64  \n",
            " 51  Bedroom AbvGr    2930 non-null   int64  \n",
            " 52  Kitchen AbvGr    2930 non-null   int64  \n",
            " 53  Kitchen Qual     2930 non-null   object \n",
            " 54  TotRms AbvGrd    2930 non-null   int64  \n",
            " 55  Functional       2930 non-null   object \n",
            " 56  Fireplaces       2930 non-null   int64  \n",
            " 57  Fireplace Qu     1508 non-null   object \n",
            " 58  Garage Type      2773 non-null   object \n",
            " 59  Garage Yr Blt    2771 non-null   float64\n",
            " 60  Garage Finish    2771 non-null   object \n",
            " 61  Garage Cars      2929 non-null   float64\n",
            " 62  Garage Area      2929 non-null   float64\n",
            " 63  Garage Qual      2771 non-null   object \n",
            " 64  Garage Cond      2771 non-null   object \n",
            " 65  Paved Drive      2930 non-null   object \n",
            " 66  Wood Deck SF     2930 non-null   int64  \n",
            " 67  Open Porch SF    2930 non-null   int64  \n",
            " 68  Enclosed Porch   2930 non-null   int64  \n",
            " 69  3Ssn Porch       2930 non-null   int64  \n",
            " 70  Screen Porch     2930 non-null   int64  \n",
            " 71  Pool Area        2930 non-null   int64  \n",
            " 72  Pool QC          13 non-null     object \n",
            " 73  Fence            572 non-null    object \n",
            " 74  Misc Feature     106 non-null    object \n",
            " 75  Misc Val         2930 non-null   int64  \n",
            " 76  Mo Sold          2930 non-null   int64  \n",
            " 77  Yr Sold          2930 non-null   int64  \n",
            " 78  Sale Type        2930 non-null   object \n",
            " 79  Sale Condition   2930 non-null   object \n",
            " 80  SalePrice        2930 non-null   int64  \n",
            "dtypes: float64(11), int64(27), object(43)\n",
            "memory usage: 1.8+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 352
        },
        "id": "78c35db6",
        "outputId": "3b7a65e5-b958-46bc-972c-722623023b1c"
      },
      "source": [
        "# First lets visualize the correlation of top 3 correlated features to SalePrice\n",
        "\n",
        "fig, ax = plt.subplots(1,3,figsize=(15,5))\n",
        "\n",
        "ax[0].scatter(df['Overall Qual'],df['SalePrice'])\n",
        "ax[1].scatter(df['Gr Liv Area'],df['SalePrice'])\n",
        "ax[2].scatter(df['Garage Cars'],df['SalePrice'])\n",
        "\n",
        "ax[0].set_ylabel('SalePrice')\n",
        "ax[0].set_xlabel('OverallQual')\n",
        "ax[1].set_xlabel('GrLivArea')\n",
        "ax[2].set_xlabel('GarageCars')"
      ],
      "id": "78c35db6",
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'GarageCars')"
            ]
          },
          "metadata": {},
          "execution_count": 147
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x360 with 3 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "afa45cd6"
      },
      "source": [
        "### (a.) Dealing with outliers\n",
        "\n",
        "In the above graphs SalePrice is highly correalted with all three features but we can see some outliers:\n",
        "For example in the first graph Price increases with the Overall Quality but we can some datapoints having very high quality but very low price\n",
        "\n",
        "Similiarly in the second and third graphs there are some data points with large GrLivArea and high GarageCars but have low Sale Price.\n",
        "\n",
        "We can already imagine that all these data points in these graphs are the same. Lets find out these datapoints.\n"
      ],
      "id": "afa45cd6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 276
        },
        "id": "5e4cbb55",
        "outputId": "d9546cc3-88d7-4785-dbd6-945af83ff3ee"
      },
      "source": [
        "df[(df['Overall Qual']>8) & (df['SalePrice']<200000)]"
      ],
      "id": "5e4cbb55",
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PID</th>\n",
              "      <th>MS SubClass</th>\n",
              "      <th>MS Zoning</th>\n",
              "      <th>Lot Frontage</th>\n",
              "      <th>Lot Area</th>\n",
              "      <th>Street</th>\n",
              "      <th>Alley</th>\n",
              "      <th>Lot Shape</th>\n",
              "      <th>Land Contour</th>\n",
              "      <th>Utilities</th>\n",
              "      <th>Lot Config</th>\n",
              "      <th>Land Slope</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>Condition 1</th>\n",
              "      <th>Condition 2</th>\n",
              "      <th>Bldg Type</th>\n",
              "      <th>House Style</th>\n",
              "      <th>Overall Qual</th>\n",
              "      <th>Overall Cond</th>\n",
              "      <th>Year Built</th>\n",
              "      <th>Year Remod/Add</th>\n",
              "      <th>Roof Style</th>\n",
              "      <th>Roof Matl</th>\n",
              "      <th>Exterior 1st</th>\n",
              "      <th>Exterior 2nd</th>\n",
              "      <th>Mas Vnr Type</th>\n",
              "      <th>Mas Vnr Area</th>\n",
              "      <th>Exter Qual</th>\n",
              "      <th>Exter Cond</th>\n",
              "      <th>Foundation</th>\n",
              "      <th>Bsmt Qual</th>\n",
              "      <th>Bsmt Cond</th>\n",
              "      <th>Bsmt Exposure</th>\n",
              "      <th>BsmtFin Type 1</th>\n",
              "      <th>BsmtFin SF 1</th>\n",
              "      <th>BsmtFin Type 2</th>\n",
              "      <th>BsmtFin SF 2</th>\n",
              "      <th>Bsmt Unf SF</th>\n",
              "      <th>Total Bsmt SF</th>\n",
              "      <th>Heating</th>\n",
              "      <th>...</th>\n",
              "      <th>Central Air</th>\n",
              "      <th>Electrical</th>\n",
              "      <th>1st Flr SF</th>\n",
              "      <th>2nd Flr SF</th>\n",
              "      <th>Low Qual Fin SF</th>\n",
              "      <th>Gr Liv Area</th>\n",
              "      <th>Bsmt Full Bath</th>\n",
              "      <th>Bsmt Half Bath</th>\n",
              "      <th>Full Bath</th>\n",
              "      <th>Half Bath</th>\n",
              "      <th>Bedroom AbvGr</th>\n",
              "      <th>Kitchen AbvGr</th>\n",
              "      <th>Kitchen Qual</th>\n",
              "      <th>TotRms AbvGrd</th>\n",
              "      <th>Functional</th>\n",
              "      <th>Fireplaces</th>\n",
              "      <th>Fireplace Qu</th>\n",
              "      <th>Garage Type</th>\n",
              "      <th>Garage Yr Blt</th>\n",
              "      <th>Garage Finish</th>\n",
              "      <th>Garage Cars</th>\n",
              "      <th>Garage Area</th>\n",
              "      <th>Garage Qual</th>\n",
              "      <th>Garage Cond</th>\n",
              "      <th>Paved Drive</th>\n",
              "      <th>Wood Deck SF</th>\n",
              "      <th>Open Porch SF</th>\n",
              "      <th>Enclosed Porch</th>\n",
              "      <th>3Ssn Porch</th>\n",
              "      <th>Screen Porch</th>\n",
              "      <th>Pool Area</th>\n",
              "      <th>Pool QC</th>\n",
              "      <th>Fence</th>\n",
              "      <th>Misc Feature</th>\n",
              "      <th>Misc Val</th>\n",
              "      <th>Mo Sold</th>\n",
              "      <th>Yr Sold</th>\n",
              "      <th>Sale Type</th>\n",
              "      <th>Sale Condition</th>\n",
              "      <th>SalePrice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1182</th>\n",
              "      <td>533350090</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>NaN</td>\n",
              "      <td>24572</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>CulDSac</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Veenker</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>1977</td>\n",
              "      <td>1977</td>\n",
              "      <td>Mansard</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>1050.0</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Gd</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>410.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>584.0</td>\n",
              "      <td>994.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1599</td>\n",
              "      <td>1345</td>\n",
              "      <td>0</td>\n",
              "      <td>2944</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>9</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1977.0</td>\n",
              "      <td>RFn</td>\n",
              "      <td>3.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>140</td>\n",
              "      <td>70</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2008</td>\n",
              "      <td>WD</td>\n",
              "      <td>Family</td>\n",
              "      <td>150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1498</th>\n",
              "      <td>908154235</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>313.0</td>\n",
              "      <td>63887</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR3</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>Feedr</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2008</td>\n",
              "      <td>2008</td>\n",
              "      <td>Hip</td>\n",
              "      <td>ClyTile</td>\n",
              "      <td>Stucco</td>\n",
              "      <td>Stucco</td>\n",
              "      <td>Stone</td>\n",
              "      <td>796.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>5644.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>466.0</td>\n",
              "      <td>6110.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>4692</td>\n",
              "      <td>950</td>\n",
              "      <td>0</td>\n",
              "      <td>5642</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>12</td>\n",
              "      <td>Typ</td>\n",
              "      <td>3</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1418.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>214</td>\n",
              "      <td>292</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>480</td>\n",
              "      <td>Gd</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2008</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>160000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2180</th>\n",
              "      <td>908154195</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>128.0</td>\n",
              "      <td>39290</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2008</td>\n",
              "      <td>2009</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>CemntBd</td>\n",
              "      <td>CmentBd</td>\n",
              "      <td>Stone</td>\n",
              "      <td>1224.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>4010.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1085.0</td>\n",
              "      <td>5095.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>5095</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5095</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>15</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1154.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>546</td>\n",
              "      <td>484</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Elev</td>\n",
              "      <td>17000</td>\n",
              "      <td>10</td>\n",
              "      <td>2007</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>183850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2181</th>\n",
              "      <td>908154205</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>130.0</td>\n",
              "      <td>40094</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>PosN</td>\n",
              "      <td>PosN</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2007</td>\n",
              "      <td>2008</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>CemntBd</td>\n",
              "      <td>CmentBd</td>\n",
              "      <td>Stone</td>\n",
              "      <td>762.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>2260.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>878.0</td>\n",
              "      <td>3138.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>3138</td>\n",
              "      <td>1538</td>\n",
              "      <td>0</td>\n",
              "      <td>4676</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>11</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>BuiltIn</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>3.0</td>\n",
              "      <td>884.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>208</td>\n",
              "      <td>406</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>2007</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>184750</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows Ã— 81 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            PID  MS SubClass MS Zoning  ...  Sale Type  Sale Condition SalePrice\n",
              "1182  533350090           60        RL  ...        WD           Family    150000\n",
              "1498  908154235           60        RL  ...        New         Partial    160000\n",
              "2180  908154195           20        RL  ...        New         Partial    183850\n",
              "2181  908154205           60        RL  ...        New         Partial    184750\n",
              "\n",
              "[4 rows x 81 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 245
        },
        "id": "4745adf4",
        "outputId": "04d1b22f-e928-4f74-9fbe-97f27c7b3fc9"
      },
      "source": [
        "df[(df['Gr Liv Area']>4000) & (df['SalePrice']<250000)]"
      ],
      "id": "4745adf4",
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PID</th>\n",
              "      <th>MS SubClass</th>\n",
              "      <th>MS Zoning</th>\n",
              "      <th>Lot Frontage</th>\n",
              "      <th>Lot Area</th>\n",
              "      <th>Street</th>\n",
              "      <th>Alley</th>\n",
              "      <th>Lot Shape</th>\n",
              "      <th>Land Contour</th>\n",
              "      <th>Utilities</th>\n",
              "      <th>Lot Config</th>\n",
              "      <th>Land Slope</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>Condition 1</th>\n",
              "      <th>Condition 2</th>\n",
              "      <th>Bldg Type</th>\n",
              "      <th>House Style</th>\n",
              "      <th>Overall Qual</th>\n",
              "      <th>Overall Cond</th>\n",
              "      <th>Year Built</th>\n",
              "      <th>Year Remod/Add</th>\n",
              "      <th>Roof Style</th>\n",
              "      <th>Roof Matl</th>\n",
              "      <th>Exterior 1st</th>\n",
              "      <th>Exterior 2nd</th>\n",
              "      <th>Mas Vnr Type</th>\n",
              "      <th>Mas Vnr Area</th>\n",
              "      <th>Exter Qual</th>\n",
              "      <th>Exter Cond</th>\n",
              "      <th>Foundation</th>\n",
              "      <th>Bsmt Qual</th>\n",
              "      <th>Bsmt Cond</th>\n",
              "      <th>Bsmt Exposure</th>\n",
              "      <th>BsmtFin Type 1</th>\n",
              "      <th>BsmtFin SF 1</th>\n",
              "      <th>BsmtFin Type 2</th>\n",
              "      <th>BsmtFin SF 2</th>\n",
              "      <th>Bsmt Unf SF</th>\n",
              "      <th>Total Bsmt SF</th>\n",
              "      <th>Heating</th>\n",
              "      <th>...</th>\n",
              "      <th>Central Air</th>\n",
              "      <th>Electrical</th>\n",
              "      <th>1st Flr SF</th>\n",
              "      <th>2nd Flr SF</th>\n",
              "      <th>Low Qual Fin SF</th>\n",
              "      <th>Gr Liv Area</th>\n",
              "      <th>Bsmt Full Bath</th>\n",
              "      <th>Bsmt Half Bath</th>\n",
              "      <th>Full Bath</th>\n",
              "      <th>Half Bath</th>\n",
              "      <th>Bedroom AbvGr</th>\n",
              "      <th>Kitchen AbvGr</th>\n",
              "      <th>Kitchen Qual</th>\n",
              "      <th>TotRms AbvGrd</th>\n",
              "      <th>Functional</th>\n",
              "      <th>Fireplaces</th>\n",
              "      <th>Fireplace Qu</th>\n",
              "      <th>Garage Type</th>\n",
              "      <th>Garage Yr Blt</th>\n",
              "      <th>Garage Finish</th>\n",
              "      <th>Garage Cars</th>\n",
              "      <th>Garage Area</th>\n",
              "      <th>Garage Qual</th>\n",
              "      <th>Garage Cond</th>\n",
              "      <th>Paved Drive</th>\n",
              "      <th>Wood Deck SF</th>\n",
              "      <th>Open Porch SF</th>\n",
              "      <th>Enclosed Porch</th>\n",
              "      <th>3Ssn Porch</th>\n",
              "      <th>Screen Porch</th>\n",
              "      <th>Pool Area</th>\n",
              "      <th>Pool QC</th>\n",
              "      <th>Fence</th>\n",
              "      <th>Misc Feature</th>\n",
              "      <th>Misc Val</th>\n",
              "      <th>Mo Sold</th>\n",
              "      <th>Yr Sold</th>\n",
              "      <th>Sale Type</th>\n",
              "      <th>Sale Condition</th>\n",
              "      <th>SalePrice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1498</th>\n",
              "      <td>908154235</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>313.0</td>\n",
              "      <td>63887</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR3</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>Feedr</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2008</td>\n",
              "      <td>2008</td>\n",
              "      <td>Hip</td>\n",
              "      <td>ClyTile</td>\n",
              "      <td>Stucco</td>\n",
              "      <td>Stucco</td>\n",
              "      <td>Stone</td>\n",
              "      <td>796.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>5644.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>466.0</td>\n",
              "      <td>6110.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>4692</td>\n",
              "      <td>950</td>\n",
              "      <td>0</td>\n",
              "      <td>5642</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>12</td>\n",
              "      <td>Typ</td>\n",
              "      <td>3</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1418.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>214</td>\n",
              "      <td>292</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>480</td>\n",
              "      <td>Gd</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2008</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>160000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2180</th>\n",
              "      <td>908154195</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>128.0</td>\n",
              "      <td>39290</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2008</td>\n",
              "      <td>2009</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>CemntBd</td>\n",
              "      <td>CmentBd</td>\n",
              "      <td>Stone</td>\n",
              "      <td>1224.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>4010.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1085.0</td>\n",
              "      <td>5095.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>5095</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5095</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>15</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1154.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>546</td>\n",
              "      <td>484</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Elev</td>\n",
              "      <td>17000</td>\n",
              "      <td>10</td>\n",
              "      <td>2007</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>183850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2181</th>\n",
              "      <td>908154205</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>130.0</td>\n",
              "      <td>40094</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Bnk</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Edwards</td>\n",
              "      <td>PosN</td>\n",
              "      <td>PosN</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>2007</td>\n",
              "      <td>2008</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>CemntBd</td>\n",
              "      <td>CmentBd</td>\n",
              "      <td>Stone</td>\n",
              "      <td>762.0</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Ex</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>2260.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>878.0</td>\n",
              "      <td>3138.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>3138</td>\n",
              "      <td>1538</td>\n",
              "      <td>0</td>\n",
              "      <td>4676</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>11</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>BuiltIn</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>3.0</td>\n",
              "      <td>884.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>208</td>\n",
              "      <td>406</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>2007</td>\n",
              "      <td>New</td>\n",
              "      <td>Partial</td>\n",
              "      <td>184750</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3 rows Ã— 81 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "            PID  MS SubClass MS Zoning  ...  Sale Type  Sale Condition SalePrice\n",
              "1498  908154235           60        RL  ...        New         Partial    160000\n",
              "2180  908154195           20        RL  ...        New         Partial    183850\n",
              "2181  908154205           60        RL  ...        New         Partial    184750\n",
              "\n",
              "[3 rows x 81 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b639b41d"
      },
      "source": [
        "Overall_qual_outliers = df[(df['Overall Qual']>8) & (df['SalePrice']<250000)].index\n",
        "Gr_Liv_outliers = df[(df['Gr Liv Area']>4000) & (df['SalePrice']<250000)].index\n",
        "\n",
        "df = df.drop(Overall_qual_outliers, axis= 0)"
      ],
      "id": "b639b41d",
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 352
        },
        "id": "564de885",
        "outputId": "e2d1ba96-fa38-4bba-ed54-f880f816c50a"
      },
      "source": [
        "fig, ax = plt.subplots(1,3,figsize=(15,5))\n",
        "\n",
        "ax[0].scatter(df['Overall Qual'],df['SalePrice'])\n",
        "ax[1].scatter(df['Gr Liv Area'],df['SalePrice'])\n",
        "ax[2].scatter(df['Garage Cars'],df['SalePrice'])\n",
        "\n",
        "ax[0].set_ylabel('SalePrice')\n",
        "ax[0].set_xlabel('OverallQual')\n",
        "ax[1].set_xlabel('GrLivArea')\n",
        "ax[2].set_xlabel('GarageCars')"
      ],
      "id": "564de885",
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'GarageCars')"
            ]
          },
          "metadata": {},
          "execution_count": 151
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1080x360 with 3 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "908a578a"
      },
      "source": [
        "### 4 outliers are removed\n",
        "---\n",
        "---\n",
        "## Now lets handle the missing data."
      ],
      "id": "908a578a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e09601fa",
        "outputId": "2b0c92b9-c383-44fe-812e-de248a4a5a8f"
      },
      "source": [
        "df.shape"
      ],
      "id": "e09601fa",
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2924, 81)"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "4cb4c842",
        "outputId": "ed643118-e7c2-48e1-9246-34ba79eddda1"
      },
      "source": [
        "df.head()"
      ],
      "id": "4cb4c842",
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PID</th>\n",
              "      <th>MS SubClass</th>\n",
              "      <th>MS Zoning</th>\n",
              "      <th>Lot Frontage</th>\n",
              "      <th>Lot Area</th>\n",
              "      <th>Street</th>\n",
              "      <th>Alley</th>\n",
              "      <th>Lot Shape</th>\n",
              "      <th>Land Contour</th>\n",
              "      <th>Utilities</th>\n",
              "      <th>Lot Config</th>\n",
              "      <th>Land Slope</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>Condition 1</th>\n",
              "      <th>Condition 2</th>\n",
              "      <th>Bldg Type</th>\n",
              "      <th>House Style</th>\n",
              "      <th>Overall Qual</th>\n",
              "      <th>Overall Cond</th>\n",
              "      <th>Year Built</th>\n",
              "      <th>Year Remod/Add</th>\n",
              "      <th>Roof Style</th>\n",
              "      <th>Roof Matl</th>\n",
              "      <th>Exterior 1st</th>\n",
              "      <th>Exterior 2nd</th>\n",
              "      <th>Mas Vnr Type</th>\n",
              "      <th>Mas Vnr Area</th>\n",
              "      <th>Exter Qual</th>\n",
              "      <th>Exter Cond</th>\n",
              "      <th>Foundation</th>\n",
              "      <th>Bsmt Qual</th>\n",
              "      <th>Bsmt Cond</th>\n",
              "      <th>Bsmt Exposure</th>\n",
              "      <th>BsmtFin Type 1</th>\n",
              "      <th>BsmtFin SF 1</th>\n",
              "      <th>BsmtFin Type 2</th>\n",
              "      <th>BsmtFin SF 2</th>\n",
              "      <th>Bsmt Unf SF</th>\n",
              "      <th>Total Bsmt SF</th>\n",
              "      <th>Heating</th>\n",
              "      <th>...</th>\n",
              "      <th>Central Air</th>\n",
              "      <th>Electrical</th>\n",
              "      <th>1st Flr SF</th>\n",
              "      <th>2nd Flr SF</th>\n",
              "      <th>Low Qual Fin SF</th>\n",
              "      <th>Gr Liv Area</th>\n",
              "      <th>Bsmt Full Bath</th>\n",
              "      <th>Bsmt Half Bath</th>\n",
              "      <th>Full Bath</th>\n",
              "      <th>Half Bath</th>\n",
              "      <th>Bedroom AbvGr</th>\n",
              "      <th>Kitchen AbvGr</th>\n",
              "      <th>Kitchen Qual</th>\n",
              "      <th>TotRms AbvGrd</th>\n",
              "      <th>Functional</th>\n",
              "      <th>Fireplaces</th>\n",
              "      <th>Fireplace Qu</th>\n",
              "      <th>Garage Type</th>\n",
              "      <th>Garage Yr Blt</th>\n",
              "      <th>Garage Finish</th>\n",
              "      <th>Garage Cars</th>\n",
              "      <th>Garage Area</th>\n",
              "      <th>Garage Qual</th>\n",
              "      <th>Garage Cond</th>\n",
              "      <th>Paved Drive</th>\n",
              "      <th>Wood Deck SF</th>\n",
              "      <th>Open Porch SF</th>\n",
              "      <th>Enclosed Porch</th>\n",
              "      <th>3Ssn Porch</th>\n",
              "      <th>Screen Porch</th>\n",
              "      <th>Pool Area</th>\n",
              "      <th>Pool QC</th>\n",
              "      <th>Fence</th>\n",
              "      <th>Misc Feature</th>\n",
              "      <th>Misc Val</th>\n",
              "      <th>Mo Sold</th>\n",
              "      <th>Yr Sold</th>\n",
              "      <th>Sale Type</th>\n",
              "      <th>Sale Condition</th>\n",
              "      <th>SalePrice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>526301100</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>141.0</td>\n",
              "      <td>31770</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>1960</td>\n",
              "      <td>1960</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>Plywood</td>\n",
              "      <td>Stone</td>\n",
              "      <td>112.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Gd</td>\n",
              "      <td>BLQ</td>\n",
              "      <td>639.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>441.0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1656</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1656</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>7</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1960.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>528.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>P</td>\n",
              "      <td>210</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>215000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>526350040</td>\n",
              "      <td>20</td>\n",
              "      <td>RH</td>\n",
              "      <td>80.0</td>\n",
              "      <td>11622</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Feedr</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>1961</td>\n",
              "      <td>1961</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>Rec</td>\n",
              "      <td>468.0</td>\n",
              "      <td>LwQ</td>\n",
              "      <td>144.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>896</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>896</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>5</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1961.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>730.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>526351010</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>81.0</td>\n",
              "      <td>14267</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>1958</td>\n",
              "      <td>1958</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>108.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>923.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>406.0</td>\n",
              "      <td>1329.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1329</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1329</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1958.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>393</td>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Gar2</td>\n",
              "      <td>12500</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>172000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>526353030</td>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>93.0</td>\n",
              "      <td>11160</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>1968</td>\n",
              "      <td>1968</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>1065.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1045.0</td>\n",
              "      <td>2110.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>2110</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2110</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>8</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1968.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>522.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>244000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>527105010</td>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>74.0</td>\n",
              "      <td>13830</td>\n",
              "      <td>Pave</td>\n",
              "      <td>NaN</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Gilbert</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1997</td>\n",
              "      <td>1998</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>791.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>137.0</td>\n",
              "      <td>928.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>...</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>928</td>\n",
              "      <td>701</td>\n",
              "      <td>0</td>\n",
              "      <td>1629</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1997.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>482.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>212</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>189900</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 81 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         PID  MS SubClass MS Zoning  ...  Sale Type  Sale Condition SalePrice\n",
              "0  526301100           20        RL  ...        WD           Normal    215000\n",
              "1  526350040           20        RH  ...        WD           Normal    105000\n",
              "2  526351010           20        RL  ...        WD           Normal    172000\n",
              "3  526353030           20        RL  ...        WD           Normal    244000\n",
              "4  527105010           60        RL  ...        WD           Normal    189900\n",
              "\n",
              "[5 rows x 81 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1bd9ff76"
      },
      "source": [
        "### Column PID is not required as we have as seperate index column qnd PID does not hold any information."
      ],
      "id": "1bd9ff76"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cc2e5ef5",
        "outputId": "3a2392d6-6f46-4289-dc51-f06ddabfc83b"
      },
      "source": [
        "df = df.iloc[:,1:]                    #dropping ID column\n",
        "df.columns"
      ],
      "id": "cc2e5ef5",
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['MS SubClass', 'MS Zoning', 'Lot Frontage', 'Lot Area', 'Street',\n",
              "       'Alley', 'Lot Shape', 'Land Contour', 'Utilities', 'Lot Config',\n",
              "       'Land Slope', 'Neighborhood', 'Condition 1', 'Condition 2', 'Bldg Type',\n",
              "       'House Style', 'Overall Qual', 'Overall Cond', 'Year Built',\n",
              "       'Year Remod/Add', 'Roof Style', 'Roof Matl', 'Exterior 1st',\n",
              "       'Exterior 2nd', 'Mas Vnr Type', 'Mas Vnr Area', 'Exter Qual',\n",
              "       'Exter Cond', 'Foundation', 'Bsmt Qual', 'Bsmt Cond', 'Bsmt Exposure',\n",
              "       'BsmtFin Type 1', 'BsmtFin SF 1', 'BsmtFin Type 2', 'BsmtFin SF 2',\n",
              "       'Bsmt Unf SF', 'Total Bsmt SF', 'Heating', 'Heating QC', 'Central Air',\n",
              "       'Electrical', '1st Flr SF', '2nd Flr SF', 'Low Qual Fin SF',\n",
              "       'Gr Liv Area', 'Bsmt Full Bath', 'Bsmt Half Bath', 'Full Bath',\n",
              "       'Half Bath', 'Bedroom AbvGr', 'Kitchen AbvGr', 'Kitchen Qual',\n",
              "       'TotRms AbvGrd', 'Functional', 'Fireplaces', 'Fireplace Qu',\n",
              "       'Garage Type', 'Garage Yr Blt', 'Garage Finish', 'Garage Cars',\n",
              "       'Garage Area', 'Garage Qual', 'Garage Cond', 'Paved Drive',\n",
              "       'Wood Deck SF', 'Open Porch SF', 'Enclosed Porch', '3Ssn Porch',\n",
              "       'Screen Porch', 'Pool Area', 'Pool QC', 'Fence', 'Misc Feature',\n",
              "       'Misc Val', 'Mo Sold', 'Yr Sold', 'Sale Type', 'Sale Condition',\n",
              "       'SalePrice'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "198d2d3f",
        "outputId": "ca63d0d7-c017-4343-91a3-1f142ef3d65f"
      },
      "source": [
        "df.info()"
      ],
      "id": "198d2d3f",
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 2924 entries, 0 to 2929\n",
            "Data columns (total 80 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   MS SubClass      2924 non-null   int64  \n",
            " 1   MS Zoning        2924 non-null   object \n",
            " 2   Lot Frontage     2435 non-null   float64\n",
            " 3   Lot Area         2924 non-null   int64  \n",
            " 4   Street           2924 non-null   object \n",
            " 5   Alley            198 non-null    object \n",
            " 6   Lot Shape        2924 non-null   object \n",
            " 7   Land Contour     2924 non-null   object \n",
            " 8   Utilities        2924 non-null   object \n",
            " 9   Lot Config       2924 non-null   object \n",
            " 10  Land Slope       2924 non-null   object \n",
            " 11  Neighborhood     2924 non-null   object \n",
            " 12  Condition 1      2924 non-null   object \n",
            " 13  Condition 2      2924 non-null   object \n",
            " 14  Bldg Type        2924 non-null   object \n",
            " 15  House Style      2924 non-null   object \n",
            " 16  Overall Qual     2924 non-null   int64  \n",
            " 17  Overall Cond     2924 non-null   int64  \n",
            " 18  Year Built       2924 non-null   int64  \n",
            " 19  Year Remod/Add   2924 non-null   int64  \n",
            " 20  Roof Style       2924 non-null   object \n",
            " 21  Roof Matl        2924 non-null   object \n",
            " 22  Exterior 1st     2924 non-null   object \n",
            " 23  Exterior 2nd     2924 non-null   object \n",
            " 24  Mas Vnr Type     2901 non-null   object \n",
            " 25  Mas Vnr Area     2901 non-null   float64\n",
            " 26  Exter Qual       2924 non-null   object \n",
            " 27  Exter Cond       2924 non-null   object \n",
            " 28  Foundation       2924 non-null   object \n",
            " 29  Bsmt Qual        2844 non-null   object \n",
            " 30  Bsmt Cond        2844 non-null   object \n",
            " 31  Bsmt Exposure    2841 non-null   object \n",
            " 32  BsmtFin Type 1   2844 non-null   object \n",
            " 33  BsmtFin SF 1     2923 non-null   float64\n",
            " 34  BsmtFin Type 2   2843 non-null   object \n",
            " 35  BsmtFin SF 2     2923 non-null   float64\n",
            " 36  Bsmt Unf SF      2923 non-null   float64\n",
            " 37  Total Bsmt SF    2923 non-null   float64\n",
            " 38  Heating          2924 non-null   object \n",
            " 39  Heating QC       2924 non-null   object \n",
            " 40  Central Air      2924 non-null   object \n",
            " 41  Electrical       2923 non-null   object \n",
            " 42  1st Flr SF       2924 non-null   int64  \n",
            " 43  2nd Flr SF       2924 non-null   int64  \n",
            " 44  Low Qual Fin SF  2924 non-null   int64  \n",
            " 45  Gr Liv Area      2924 non-null   int64  \n",
            " 46  Bsmt Full Bath   2922 non-null   float64\n",
            " 47  Bsmt Half Bath   2922 non-null   float64\n",
            " 48  Full Bath        2924 non-null   int64  \n",
            " 49  Half Bath        2924 non-null   int64  \n",
            " 50  Bedroom AbvGr    2924 non-null   int64  \n",
            " 51  Kitchen AbvGr    2924 non-null   int64  \n",
            " 52  Kitchen Qual     2924 non-null   object \n",
            " 53  TotRms AbvGrd    2924 non-null   int64  \n",
            " 54  Functional       2924 non-null   object \n",
            " 55  Fireplaces       2924 non-null   int64  \n",
            " 56  Fireplace Qu     1503 non-null   object \n",
            " 57  Garage Type      2767 non-null   object \n",
            " 58  Garage Yr Blt    2765 non-null   float64\n",
            " 59  Garage Finish    2765 non-null   object \n",
            " 60  Garage Cars      2923 non-null   float64\n",
            " 61  Garage Area      2923 non-null   float64\n",
            " 62  Garage Qual      2765 non-null   object \n",
            " 63  Garage Cond      2765 non-null   object \n",
            " 64  Paved Drive      2924 non-null   object \n",
            " 65  Wood Deck SF     2924 non-null   int64  \n",
            " 66  Open Porch SF    2924 non-null   int64  \n",
            " 67  Enclosed Porch   2924 non-null   int64  \n",
            " 68  3Ssn Porch       2924 non-null   int64  \n",
            " 69  Screen Porch     2924 non-null   int64  \n",
            " 70  Pool Area        2924 non-null   int64  \n",
            " 71  Pool QC          12 non-null     object \n",
            " 72  Fence            572 non-null    object \n",
            " 73  Misc Feature     105 non-null    object \n",
            " 74  Misc Val         2924 non-null   int64  \n",
            " 75  Mo Sold          2924 non-null   int64  \n",
            " 76  Yr Sold          2924 non-null   int64  \n",
            " 77  Sale Type        2924 non-null   object \n",
            " 78  Sale Condition   2924 non-null   object \n",
            " 79  SalePrice        2924 non-null   int64  \n",
            "dtypes: float64(11), int64(26), object(43)\n",
            "memory usage: 1.8+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "27019d3a"
      },
      "source": [
        "### Lets get a sorted of number of null values in each column."
      ],
      "id": "27019d3a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2593d720",
        "outputId": "18ba053f-9a34-444c-c6c4-a74b83ee523c"
      },
      "source": [
        "df.isnull().sum().sort_values(ascending = False)"
      ],
      "id": "2593d720",
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pool QC           2912\n",
              "Misc Feature      2819\n",
              "Alley             2726\n",
              "Fence             2352\n",
              "Fireplace Qu      1421\n",
              "                  ... \n",
              "2nd Flr SF           0\n",
              "1st Flr SF           0\n",
              "Central Air          0\n",
              "Sale Condition       0\n",
              "MS SubClass          0\n",
              "Length: 80, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "75797413",
        "outputId": "4f046c1d-829d-41fa-c07e-26c31be0876e"
      },
      "source": [
        "null_cols=(((df.isnull().sum())/df.shape[0])*100).sort_values(ascending = False).head(10)\n",
        "null_cols"
      ],
      "id": "75797413",
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Pool QC          99.589603\n",
              "Misc Feature     96.409029\n",
              "Alley            93.228454\n",
              "Fence            80.437756\n",
              "Fireplace Qu     48.597811\n",
              "Lot Frontage     16.723666\n",
              "Garage Cond       5.437756\n",
              "Garage Qual       5.437756\n",
              "Garage Yr Blt     5.437756\n",
              "Garage Finish     5.437756\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9debe387",
        "outputId": "59aa3577-3699-4999-c20e-dc900fc63716"
      },
      "source": [
        "# Do we have duplicates?\n",
        "print('Number of Duplicates:', len(df[df.duplicated()]))\n",
        "\n",
        "# Do we have missing values?\n",
        "print('Number of Missing Values:', df.isnull().sum().sum())"
      ],
      "id": "9debe387",
      "execution_count": 158,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of Duplicates: 0\n",
            "Number of Missing Values: 13973\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "81945ae6",
        "outputId": "e2fdee17-6b48-4fb2-ed15-10ddebae302f"
      },
      "source": [
        "sns.barplot(x=null_cols.index,y=null_cols)\n",
        "plt.xticks(rotation=90);"
      ],
      "id": "81945ae6",
      "execution_count": 159,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8f6ebdc7"
      },
      "source": [
        "Sometimes it is a good idea to remove a feature entirely if it has too many null values. However, you should carefully consider why it has so many null values, in certain situations null could just be used as a separate category.\n",
        "\n",
        "Take for example a feature column for the number of cars that can fit into a garage. Perhaps if there is no garage then there is a null value, instead of a zero. It probably makes more sense to quickly fill the null values in this case with a zero instead of a null. Only you can decide based off your domain expertise and knowledge of the data set.\n",
        "\n",
        "---"
      ],
      "id": "8f6ebdc7"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "06e341e9",
        "outputId": "b0e92ed7-e56f-43d6-bd10-e3f64a9a830a"
      },
      "source": [
        "print('Count of Features per Data Type:')\n",
        "df.dtypes.value_counts() "
      ],
      "id": "06e341e9",
      "execution_count": 160,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Count of Features per Data Type:\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "object     43\n",
              "int64      26\n",
              "float64    11\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cba836dd",
        "outputId": "e70e047a-a2f3-4add-f6ce-98fd18255718"
      },
      "source": [
        "garage_cols = df.columns[df.columns.str.startswith('Garage')]\n",
        "garage_cols"
      ],
      "id": "cba836dd",
      "execution_count": 161,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Garage Type', 'Garage Yr Blt', 'Garage Finish', 'Garage Cars',\n",
              "       'Garage Area', 'Garage Qual', 'Garage Cond'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "692f531f",
        "outputId": "ae428b59-ee84-4b28-fdc9-b3bec61dfade"
      },
      "source": [
        "bsmt_cols = df.columns[df.columns.str.startswith('Bsmt')]\n",
        "bsmt_cols"
      ],
      "id": "692f531f",
      "execution_count": 162,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Bsmt Qual', 'Bsmt Cond', 'Bsmt Exposure', 'BsmtFin Type 1',\n",
              "       'BsmtFin SF 1', 'BsmtFin Type 2', 'BsmtFin SF 2', 'Bsmt Unf SF',\n",
              "       'Bsmt Full Bath', 'Bsmt Half Bath'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 162
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d259a93e",
        "outputId": "f4ed3c77-5e54-4a13-8e29-c698fdf9d363"
      },
      "source": [
        "mas_cols = df.columns[df.columns.str.startswith('Mas')]\n",
        "mas_cols"
      ],
      "id": "d259a93e",
      "execution_count": 163,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Mas Vnr Type', 'Mas Vnr Area'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2a56b697"
      },
      "source": [
        "for cols in df[garage_cols].select_dtypes(exclude='object'):\n",
        "    df[cols] = df[cols].fillna(0)\n",
        "    \n",
        "for cols in df[garage_cols].select_dtypes(include='object'):\n",
        "    df[cols] = df[cols].fillna('None')\n",
        "    \n",
        "for cols in df[bsmt_cols].select_dtypes(exclude='object'):\n",
        "    df[cols] = df[cols].fillna(0)\n",
        "    \n",
        "for cols in df[bsmt_cols].select_dtypes(include='object'):\n",
        "    df[cols] = df[cols].fillna('None')"
      ],
      "id": "2a56b697",
      "execution_count": 164,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "95b0e7f4"
      },
      "source": [
        "All the features that start with Mas and contain NaN means that those houses don't have a masonry veneer"
      ],
      "id": "95b0e7f4"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2ee30a13"
      },
      "source": [
        "for cols in df[mas_cols].select_dtypes(exclude='object'):\n",
        "    df[cols] = df[cols].fillna(0)\n",
        "    \n",
        "for cols in df[mas_cols].select_dtypes(include='object'):\n",
        "    df[cols] = df[cols].fillna('None')"
      ],
      "id": "2ee30a13",
      "execution_count": 165,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e1e422b3"
      },
      "source": [
        "PoolQC refers to the pool quality of the house. Data description says that having a NaN in this category means that the house doesn't have a pool.</div>"
      ],
      "id": "e1e422b3"
    },
    {
      "cell_type": "code",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.437615Z",
          "iopub.status.busy": "2021-10-16T23:59:04.43741Z",
          "iopub.status.idle": "2021-10-16T23:59:04.443175Z",
          "shell.execute_reply": "2021-10-16T23:59:04.442431Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.43759Z"
        },
        "id": "aa572bbd"
      },
      "source": [
        "df['Pool QC'] = df['Pool QC'].fillna('None')"
      ],
      "id": "aa572bbd",
      "execution_count": 166,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "048f618c"
      },
      "source": [
        "MiscFeature refers to miscellaneous features of the house. Data description says that having a NaN in this category means that the house doesn't have any.</div>"
      ],
      "id": "048f618c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.444992Z",
          "iopub.status.busy": "2021-10-16T23:59:04.444523Z",
          "iopub.status.idle": "2021-10-16T23:59:04.455178Z",
          "shell.execute_reply": "2021-10-16T23:59:04.45441Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.444951Z"
        },
        "id": "380d0946"
      },
      "source": [
        "df['Misc Feature'] = df['Misc Feature'].fillna('None')"
      ],
      "id": "380d0946",
      "execution_count": 167,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "662dfc57"
      },
      "source": [
        "Alley refers to the type of alley access to the property. Data description says that having a NaN in this category means that the house doesn't have any.</div>"
      ],
      "id": "662dfc57"
    },
    {
      "cell_type": "code",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.457268Z",
          "iopub.status.busy": "2021-10-16T23:59:04.456743Z",
          "iopub.status.idle": "2021-10-16T23:59:04.467289Z",
          "shell.execute_reply": "2021-10-16T23:59:04.466699Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.457202Z"
        },
        "id": "29c5c409"
      },
      "source": [
        "df['Alley'] = df['Alley'].fillna('None')"
      ],
      "id": "29c5c409",
      "execution_count": 168,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "316375df"
      },
      "source": [
        "Fence refers to the type of fencing around the property. Data description says that having a NaN in this category means that the house doesn't have a fence.</div>\n"
      ],
      "id": "316375df"
    },
    {
      "cell_type": "code",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.46908Z",
          "iopub.status.busy": "2021-10-16T23:59:04.468607Z",
          "iopub.status.idle": "2021-10-16T23:59:04.479364Z",
          "shell.execute_reply": "2021-10-16T23:59:04.47849Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.469039Z"
        },
        "id": "f0a97a0f"
      },
      "source": [
        "df['Fence'] = df['Fence'].fillna('None')"
      ],
      "id": "f0a97a0f",
      "execution_count": 169,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2c72811b"
      },
      "source": [
        "FireplaceQu refers to the quality of the fireplace. Data description says that having a NaN in this category means that the house doesn't have a fireplace.</div>"
      ],
      "id": "2c72811b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.481147Z",
          "iopub.status.busy": "2021-10-16T23:59:04.48085Z",
          "iopub.status.idle": "2021-10-16T23:59:04.49044Z",
          "shell.execute_reply": "2021-10-16T23:59:04.489659Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.481109Z"
        },
        "id": "bcc80344"
      },
      "source": [
        "df['Fireplace Qu'] = df['Fireplace Qu'].fillna('None')"
      ],
      "id": "bcc80344",
      "execution_count": 170,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "446ac22c"
      },
      "source": [
        "LotFrontage refers to the distance in feet between the street and the property. Let's impute the missing values with the median of the neighborhood.</div>"
      ],
      "id": "446ac22c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "execution": {
          "iopub.execute_input": "2021-10-16T23:59:04.4923Z",
          "iopub.status.busy": "2021-10-16T23:59:04.491661Z",
          "iopub.status.idle": "2021-10-16T23:59:04.511548Z",
          "shell.execute_reply": "2021-10-16T23:59:04.510582Z",
          "shell.execute_reply.started": "2021-10-16T23:59:04.492264Z"
        },
        "id": "3e381766",
        "outputId": "fce5e7db-9abd-4e82-c5c7-daf1823119d2"
      },
      "source": [
        "df['Lot Frontage'] = df.groupby('Neighborhood')['Lot Frontage'].transform(lambda i: i.fillna(i.median()))\n",
        "df"
      ],
      "id": "3e381766",
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>MS SubClass</th>\n",
              "      <th>MS Zoning</th>\n",
              "      <th>Lot Frontage</th>\n",
              "      <th>Lot Area</th>\n",
              "      <th>Street</th>\n",
              "      <th>Alley</th>\n",
              "      <th>Lot Shape</th>\n",
              "      <th>Land Contour</th>\n",
              "      <th>Utilities</th>\n",
              "      <th>Lot Config</th>\n",
              "      <th>Land Slope</th>\n",
              "      <th>Neighborhood</th>\n",
              "      <th>Condition 1</th>\n",
              "      <th>Condition 2</th>\n",
              "      <th>Bldg Type</th>\n",
              "      <th>House Style</th>\n",
              "      <th>Overall Qual</th>\n",
              "      <th>Overall Cond</th>\n",
              "      <th>Year Built</th>\n",
              "      <th>Year Remod/Add</th>\n",
              "      <th>Roof Style</th>\n",
              "      <th>Roof Matl</th>\n",
              "      <th>Exterior 1st</th>\n",
              "      <th>Exterior 2nd</th>\n",
              "      <th>Mas Vnr Type</th>\n",
              "      <th>Mas Vnr Area</th>\n",
              "      <th>Exter Qual</th>\n",
              "      <th>Exter Cond</th>\n",
              "      <th>Foundation</th>\n",
              "      <th>Bsmt Qual</th>\n",
              "      <th>Bsmt Cond</th>\n",
              "      <th>Bsmt Exposure</th>\n",
              "      <th>BsmtFin Type 1</th>\n",
              "      <th>BsmtFin SF 1</th>\n",
              "      <th>BsmtFin Type 2</th>\n",
              "      <th>BsmtFin SF 2</th>\n",
              "      <th>Bsmt Unf SF</th>\n",
              "      <th>Total Bsmt SF</th>\n",
              "      <th>Heating</th>\n",
              "      <th>Heating QC</th>\n",
              "      <th>Central Air</th>\n",
              "      <th>Electrical</th>\n",
              "      <th>1st Flr SF</th>\n",
              "      <th>2nd Flr SF</th>\n",
              "      <th>Low Qual Fin SF</th>\n",
              "      <th>Gr Liv Area</th>\n",
              "      <th>Bsmt Full Bath</th>\n",
              "      <th>Bsmt Half Bath</th>\n",
              "      <th>Full Bath</th>\n",
              "      <th>Half Bath</th>\n",
              "      <th>Bedroom AbvGr</th>\n",
              "      <th>Kitchen AbvGr</th>\n",
              "      <th>Kitchen Qual</th>\n",
              "      <th>TotRms AbvGrd</th>\n",
              "      <th>Functional</th>\n",
              "      <th>Fireplaces</th>\n",
              "      <th>Fireplace Qu</th>\n",
              "      <th>Garage Type</th>\n",
              "      <th>Garage Yr Blt</th>\n",
              "      <th>Garage Finish</th>\n",
              "      <th>Garage Cars</th>\n",
              "      <th>Garage Area</th>\n",
              "      <th>Garage Qual</th>\n",
              "      <th>Garage Cond</th>\n",
              "      <th>Paved Drive</th>\n",
              "      <th>Wood Deck SF</th>\n",
              "      <th>Open Porch SF</th>\n",
              "      <th>Enclosed Porch</th>\n",
              "      <th>3Ssn Porch</th>\n",
              "      <th>Screen Porch</th>\n",
              "      <th>Pool Area</th>\n",
              "      <th>Pool QC</th>\n",
              "      <th>Fence</th>\n",
              "      <th>Misc Feature</th>\n",
              "      <th>Misc Val</th>\n",
              "      <th>Mo Sold</th>\n",
              "      <th>Yr Sold</th>\n",
              "      <th>Sale Type</th>\n",
              "      <th>Sale Condition</th>\n",
              "      <th>SalePrice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>141.0</td>\n",
              "      <td>31770</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>1960</td>\n",
              "      <td>1960</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>Plywood</td>\n",
              "      <td>Stone</td>\n",
              "      <td>112.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Gd</td>\n",
              "      <td>BLQ</td>\n",
              "      <td>639.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>441.0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>Fa</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1656</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1656</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>7</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1960.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>528.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>P</td>\n",
              "      <td>210</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>215000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>20</td>\n",
              "      <td>RH</td>\n",
              "      <td>80.0</td>\n",
              "      <td>11622</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Feedr</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>5</td>\n",
              "      <td>6</td>\n",
              "      <td>1961</td>\n",
              "      <td>1961</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>Rec</td>\n",
              "      <td>468.0</td>\n",
              "      <td>LwQ</td>\n",
              "      <td>144.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>882.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>896</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>896</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>5</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1961.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>730.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>105000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>81.0</td>\n",
              "      <td>14267</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>1958</td>\n",
              "      <td>1958</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>Wd Sdng</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>108.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>923.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>406.0</td>\n",
              "      <td>1329.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1329</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1329</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Gd</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1958.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>1.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>393</td>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>Gar2</td>\n",
              "      <td>12500</td>\n",
              "      <td>6</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>172000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>93.0</td>\n",
              "      <td>11160</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Corner</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>NAmes</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>1968</td>\n",
              "      <td>1968</td>\n",
              "      <td>Hip</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>1065.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1045.0</td>\n",
              "      <td>2110.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>Ex</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>2110</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2110</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>Ex</td>\n",
              "      <td>8</td>\n",
              "      <td>Typ</td>\n",
              "      <td>2</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1968.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>522.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>244000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>74.0</td>\n",
              "      <td>13830</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Gilbert</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1997</td>\n",
              "      <td>1998</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>VinylSd</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>No</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>791.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>137.0</td>\n",
              "      <td>928.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>928</td>\n",
              "      <td>701</td>\n",
              "      <td>0</td>\n",
              "      <td>1629</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1997.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>2.0</td>\n",
              "      <td>482.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>212</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2010</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>189900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2925</th>\n",
              "      <td>80</td>\n",
              "      <td>RL</td>\n",
              "      <td>37.0</td>\n",
              "      <td>7937</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>CulDSac</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Mitchel</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>SLvl</td>\n",
              "      <td>6</td>\n",
              "      <td>6</td>\n",
              "      <td>1984</td>\n",
              "      <td>1984</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Av</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>819.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>184.0</td>\n",
              "      <td>1003.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1003</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1003</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>Detchd</td>\n",
              "      <td>1984.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>2.0</td>\n",
              "      <td>588.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>120</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>GdPrv</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>2006</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>142500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2926</th>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>74.0</td>\n",
              "      <td>8885</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>IR1</td>\n",
              "      <td>Low</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Mod</td>\n",
              "      <td>Mitchel</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1983</td>\n",
              "      <td>1983</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>Av</td>\n",
              "      <td>BLQ</td>\n",
              "      <td>301.0</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>324.0</td>\n",
              "      <td>239.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>902</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>902</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>5</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1983.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>2.0</td>\n",
              "      <td>484.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>164</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>2006</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>131000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2927</th>\n",
              "      <td>85</td>\n",
              "      <td>RL</td>\n",
              "      <td>62.0</td>\n",
              "      <td>10441</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Gtl</td>\n",
              "      <td>Mitchel</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>SFoyer</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1992</td>\n",
              "      <td>1992</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>Wd Shng</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>Av</td>\n",
              "      <td>GLQ</td>\n",
              "      <td>337.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>575.0</td>\n",
              "      <td>912.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>970</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>970</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>Y</td>\n",
              "      <td>80</td>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>MnPrv</td>\n",
              "      <td>Shed</td>\n",
              "      <td>700</td>\n",
              "      <td>7</td>\n",
              "      <td>2006</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>132000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2928</th>\n",
              "      <td>20</td>\n",
              "      <td>RL</td>\n",
              "      <td>77.0</td>\n",
              "      <td>10010</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Mod</td>\n",
              "      <td>Mitchel</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>1Story</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1974</td>\n",
              "      <td>1975</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>None</td>\n",
              "      <td>0.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>CBlock</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>Av</td>\n",
              "      <td>ALQ</td>\n",
              "      <td>1071.0</td>\n",
              "      <td>LwQ</td>\n",
              "      <td>123.0</td>\n",
              "      <td>195.0</td>\n",
              "      <td>1389.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>Gd</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>1389</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1389</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>6</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1975.0</td>\n",
              "      <td>RFn</td>\n",
              "      <td>2.0</td>\n",
              "      <td>418.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>240</td>\n",
              "      <td>38</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>2006</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>170000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2929</th>\n",
              "      <td>60</td>\n",
              "      <td>RL</td>\n",
              "      <td>74.0</td>\n",
              "      <td>9627</td>\n",
              "      <td>Pave</td>\n",
              "      <td>None</td>\n",
              "      <td>Reg</td>\n",
              "      <td>Lvl</td>\n",
              "      <td>AllPub</td>\n",
              "      <td>Inside</td>\n",
              "      <td>Mod</td>\n",
              "      <td>Mitchel</td>\n",
              "      <td>Norm</td>\n",
              "      <td>Norm</td>\n",
              "      <td>1Fam</td>\n",
              "      <td>2Story</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>1993</td>\n",
              "      <td>1994</td>\n",
              "      <td>Gable</td>\n",
              "      <td>CompShg</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>HdBoard</td>\n",
              "      <td>BrkFace</td>\n",
              "      <td>94.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>PConc</td>\n",
              "      <td>Gd</td>\n",
              "      <td>TA</td>\n",
              "      <td>Av</td>\n",
              "      <td>LwQ</td>\n",
              "      <td>758.0</td>\n",
              "      <td>Unf</td>\n",
              "      <td>0.0</td>\n",
              "      <td>238.0</td>\n",
              "      <td>996.0</td>\n",
              "      <td>GasA</td>\n",
              "      <td>Ex</td>\n",
              "      <td>Y</td>\n",
              "      <td>SBrkr</td>\n",
              "      <td>996</td>\n",
              "      <td>1004</td>\n",
              "      <td>0</td>\n",
              "      <td>2000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>9</td>\n",
              "      <td>Typ</td>\n",
              "      <td>1</td>\n",
              "      <td>TA</td>\n",
              "      <td>Attchd</td>\n",
              "      <td>1993.0</td>\n",
              "      <td>Fin</td>\n",
              "      <td>3.0</td>\n",
              "      <td>650.0</td>\n",
              "      <td>TA</td>\n",
              "      <td>TA</td>\n",
              "      <td>Y</td>\n",
              "      <td>190</td>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>2006</td>\n",
              "      <td>WD</td>\n",
              "      <td>Normal</td>\n",
              "      <td>188000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2924 rows Ã— 80 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      MS SubClass MS Zoning  Lot Frontage  ...  Sale Type Sale Condition SalePrice\n",
              "0              20        RL         141.0  ...        WD          Normal    215000\n",
              "1              20        RH          80.0  ...        WD          Normal    105000\n",
              "2              20        RL          81.0  ...        WD          Normal    172000\n",
              "3              20        RL          93.0  ...        WD          Normal    244000\n",
              "4              60        RL          74.0  ...        WD          Normal    189900\n",
              "...           ...       ...           ...  ...        ...            ...       ...\n",
              "2925           80        RL          37.0  ...        WD          Normal    142500\n",
              "2926           20        RL          74.0  ...        WD          Normal    131000\n",
              "2927           85        RL          62.0  ...        WD          Normal    132000\n",
              "2928           20        RL          77.0  ...        WD          Normal    170000\n",
              "2929           60        RL          74.0  ...        WD          Normal    188000\n",
              "\n",
              "[2924 rows x 80 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 171
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "28f9c77f",
        "outputId": "1c7ad21b-7257-4559-d74a-7e0279aff484"
      },
      "source": [
        "null_cols=(((df.isnull().sum())/df.shape[0])*100).sort_values(ascending = False).head(10)\n",
        "null_cols"
      ],
      "id": "28f9c77f",
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Lot Frontage     0.102599\n",
              "Total Bsmt SF    0.034200\n",
              "Electrical       0.034200\n",
              "Bsmt Qual        0.000000\n",
              "Exterior 1st     0.000000\n",
              "Exterior 2nd     0.000000\n",
              "Mas Vnr Type     0.000000\n",
              "Mas Vnr Area     0.000000\n",
              "Exter Qual       0.000000\n",
              "Exter Cond       0.000000\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "b0c28cba",
        "outputId": "5b075d3a-0da7-49e7-9982-2e0338c3ff97"
      },
      "source": [
        "sns.barplot(x=null_cols.index,y=null_cols)\n",
        "plt.xticks(rotation=90);"
      ],
      "id": "b0c28cba",
      "execution_count": 173,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2f8fa276",
        "outputId": "ac97c678-44c4-4712-9cbc-3ddaf23725c3"
      },
      "source": [
        "df['Lot Frontage'].isna().sum(), df['Electrical'].isna().sum(), df['Total Bsmt SF'].isna().sum()"
      ],
      "id": "2f8fa276",
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3, 1, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dfb8df9e"
      },
      "source": [
        "### Now the remaining missing values are minimal so lets plug-in the missing values with modes of each column"
      ],
      "id": "dfb8df9e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "24df006b",
        "outputId": "cdbf8136-09d8-4d11-9405-409cbb531486"
      },
      "source": [
        "# replace missing values for mode of each column\n",
        "df = df.fillna(df.mode().iloc[0])\n",
        "\n",
        "df['Lot Frontage'].isna().sum(), df['Electrical'].isna().sum(), df['Total Bsmt SF'].isna().sum()"
      ],
      "id": "24df006b",
      "execution_count": 175,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0, 0, 0)"
            ]
          },
          "metadata": {},
          "execution_count": 175
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9094f2b5",
        "outputId": "549091ec-0d70-4aac-8969-911d040ef7ce"
      },
      "source": [
        "null_cols=(((df.isnull().sum())/df.shape[0])*100).sort_values(ascending = False).head(10)\n",
        "null_cols"
      ],
      "id": "9094f2b5",
      "execution_count": 176,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SalePrice         0.0\n",
              "Sale Condition    0.0\n",
              "Roof Matl         0.0\n",
              "Exterior 1st      0.0\n",
              "Exterior 2nd      0.0\n",
              "Mas Vnr Type      0.0\n",
              "Mas Vnr Area      0.0\n",
              "Exter Qual        0.0\n",
              "Exter Cond        0.0\n",
              "Foundation        0.0\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 176
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ed94d09f"
      },
      "source": [
        "MSSubClass: Identifies the type of dwelling involved in the sale."
      ],
      "id": "ed94d09f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a43d0a19"
      },
      "source": [
        "df['MS SubClass'] = df['MS SubClass'].apply(str)"
      ],
      "id": "a43d0a19",
      "execution_count": 177,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c48a6b7f"
      },
      "source": [
        "Need to convert all categorical columns to numerical columns before performing the regression.\n",
        "\n",
        "For this we will use dummies method available in Pandas library"
      ],
      "id": "c48a6b7f"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "300d6a0c"
      },
      "source": [
        "df_nums = df.select_dtypes(exclude='object')\n",
        "df_objs = df.select_dtypes(include='object')"
      ],
      "id": "300d6a0c",
      "execution_count": 178,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "55687649",
        "outputId": "3aa1e080-0399-4e38-9aab-fa4d0cff0458"
      },
      "source": [
        "df_objs.info()"
      ],
      "id": "55687649",
      "execution_count": 179,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 2924 entries, 0 to 2929\n",
            "Data columns (total 44 columns):\n",
            " #   Column          Non-Null Count  Dtype \n",
            "---  ------          --------------  ----- \n",
            " 0   MS SubClass     2924 non-null   object\n",
            " 1   MS Zoning       2924 non-null   object\n",
            " 2   Street          2924 non-null   object\n",
            " 3   Alley           2924 non-null   object\n",
            " 4   Lot Shape       2924 non-null   object\n",
            " 5   Land Contour    2924 non-null   object\n",
            " 6   Utilities       2924 non-null   object\n",
            " 7   Lot Config      2924 non-null   object\n",
            " 8   Land Slope      2924 non-null   object\n",
            " 9   Neighborhood    2924 non-null   object\n",
            " 10  Condition 1     2924 non-null   object\n",
            " 11  Condition 2     2924 non-null   object\n",
            " 12  Bldg Type       2924 non-null   object\n",
            " 13  House Style     2924 non-null   object\n",
            " 14  Roof Style      2924 non-null   object\n",
            " 15  Roof Matl       2924 non-null   object\n",
            " 16  Exterior 1st    2924 non-null   object\n",
            " 17  Exterior 2nd    2924 non-null   object\n",
            " 18  Mas Vnr Type    2924 non-null   object\n",
            " 19  Exter Qual      2924 non-null   object\n",
            " 20  Exter Cond      2924 non-null   object\n",
            " 21  Foundation      2924 non-null   object\n",
            " 22  Bsmt Qual       2924 non-null   object\n",
            " 23  Bsmt Cond       2924 non-null   object\n",
            " 24  Bsmt Exposure   2924 non-null   object\n",
            " 25  BsmtFin Type 1  2924 non-null   object\n",
            " 26  BsmtFin Type 2  2924 non-null   object\n",
            " 27  Heating         2924 non-null   object\n",
            " 28  Heating QC      2924 non-null   object\n",
            " 29  Central Air     2924 non-null   object\n",
            " 30  Electrical      2924 non-null   object\n",
            " 31  Kitchen Qual    2924 non-null   object\n",
            " 32  Functional      2924 non-null   object\n",
            " 33  Fireplace Qu    2924 non-null   object\n",
            " 34  Garage Type     2924 non-null   object\n",
            " 35  Garage Finish   2924 non-null   object\n",
            " 36  Garage Qual     2924 non-null   object\n",
            " 37  Garage Cond     2924 non-null   object\n",
            " 38  Paved Drive     2924 non-null   object\n",
            " 39  Pool QC         2924 non-null   object\n",
            " 40  Fence           2924 non-null   object\n",
            " 41  Misc Feature    2924 non-null   object\n",
            " 42  Sale Type       2924 non-null   object\n",
            " 43  Sale Condition  2924 non-null   object\n",
            "dtypes: object(44)\n",
            "memory usage: 1.0+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "be2e478f",
        "outputId": "70e22e74-b0ac-4d75-bbc7-1ab13654cd0b"
      },
      "source": [
        "df_nums.info()"
      ],
      "id": "be2e478f",
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 2924 entries, 0 to 2929\n",
            "Data columns (total 36 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   Lot Frontage     2924 non-null   float64\n",
            " 1   Lot Area         2924 non-null   int64  \n",
            " 2   Overall Qual     2924 non-null   int64  \n",
            " 3   Overall Cond     2924 non-null   int64  \n",
            " 4   Year Built       2924 non-null   int64  \n",
            " 5   Year Remod/Add   2924 non-null   int64  \n",
            " 6   Mas Vnr Area     2924 non-null   float64\n",
            " 7   BsmtFin SF 1     2924 non-null   float64\n",
            " 8   BsmtFin SF 2     2924 non-null   float64\n",
            " 9   Bsmt Unf SF      2924 non-null   float64\n",
            " 10  Total Bsmt SF    2924 non-null   float64\n",
            " 11  1st Flr SF       2924 non-null   int64  \n",
            " 12  2nd Flr SF       2924 non-null   int64  \n",
            " 13  Low Qual Fin SF  2924 non-null   int64  \n",
            " 14  Gr Liv Area      2924 non-null   int64  \n",
            " 15  Bsmt Full Bath   2924 non-null   float64\n",
            " 16  Bsmt Half Bath   2924 non-null   float64\n",
            " 17  Full Bath        2924 non-null   int64  \n",
            " 18  Half Bath        2924 non-null   int64  \n",
            " 19  Bedroom AbvGr    2924 non-null   int64  \n",
            " 20  Kitchen AbvGr    2924 non-null   int64  \n",
            " 21  TotRms AbvGrd    2924 non-null   int64  \n",
            " 22  Fireplaces       2924 non-null   int64  \n",
            " 23  Garage Yr Blt    2924 non-null   float64\n",
            " 24  Garage Cars      2924 non-null   float64\n",
            " 25  Garage Area      2924 non-null   float64\n",
            " 26  Wood Deck SF     2924 non-null   int64  \n",
            " 27  Open Porch SF    2924 non-null   int64  \n",
            " 28  Enclosed Porch   2924 non-null   int64  \n",
            " 29  3Ssn Porch       2924 non-null   int64  \n",
            " 30  Screen Porch     2924 non-null   int64  \n",
            " 31  Pool Area        2924 non-null   int64  \n",
            " 32  Misc Val         2924 non-null   int64  \n",
            " 33  Mo Sold          2924 non-null   int64  \n",
            " 34  Yr Sold          2924 non-null   int64  \n",
            " 35  SalePrice        2924 non-null   int64  \n",
            "dtypes: float64(11), int64(25)\n",
            "memory usage: 845.2 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6a3cf64c"
      },
      "source": [
        "df_objs = pd.get_dummies(df_objs, drop_first = True)"
      ],
      "id": "6a3cf64c",
      "execution_count": 181,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fc581ffc",
        "outputId": "e8d91182-e73b-4ad0-b508-7471ca74c5ee"
      },
      "source": [
        "df_objs.shape"
      ],
      "id": "fc581ffc",
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2924, 252)"
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "50231d3f",
        "outputId": "11ad7049-8730-408f-9a30-de23c844a1fa"
      },
      "source": [
        "df = pd.concat([df_nums,df_objs], axis = 1)\n",
        "df.shape"
      ],
      "id": "50231d3f",
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2924, 288)"
            ]
          },
          "metadata": {},
          "execution_count": 183
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f8095765"
      },
      "source": [
        "## Performing Regression"
      ],
      "id": "f8095765"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "23328361"
      },
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV"
      ],
      "id": "23328361",
      "execution_count": 184,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "98a3f33a"
      },
      "source": [
        "\n",
        "   Standardization of a dataset is a common requirement for many\n",
        "   machine learning estimators: they might behave badly if the\n",
        "   individual features do not more or less look like standard normally\n",
        "   distributed data (e.g. Gaussian with 0 mean and unit variance).\n",
        "   \n",
        "   For instance many elements used in the objective function of\n",
        "   a learning algorithm (such as the RBF kernel of Support Vector\n",
        "   Machines or the L1 and L2 regularizers of linear models) assume that\n",
        "   all features are centered around 0 and have variance in the same\n",
        "   order. If a feature has a variance that is orders of magnitude larger\n",
        "   that others, it might dominate the objective function and make the\n",
        "   estimator unable to learn from other features correctly as expected.\n",
        "   \n",
        "   ---\n",
        "   Labeling the data"
      ],
      "id": "98a3f33a"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "20921335"
      },
      "source": [
        "X = df.drop('SalePrice',axis=1)\n",
        "y = df['SalePrice']"
      ],
      "id": "20921335",
      "execution_count": 185,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5ec183f5"
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=12345)\n",
        "scaler = StandardScaler()"
      ],
      "id": "5ec183f5",
      "execution_count": 186,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0b15d71f"
      },
      "source": [
        "scaler.fit(X_train)\n",
        "X_test = scaler.fit_transform(X_test)\n",
        "X_train = scaler.transform(X_train)"
      ],
      "id": "0b15d71f",
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "deabdd03"
      },
      "source": [
        "from sklearn.linear_model import ElasticNet"
      ],
      "id": "deabdd03",
      "execution_count": 188,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5e510ba0"
      },
      "source": [
        "param_grid = {'alpha':[0.1,1,5,10,50,100],\n",
        "              'l1_ratio':[.1, .5, .7, .9, .95,0.99, 1]}\n",
        "\n",
        "base_model = ElasticNet(normalize=True)"
      ],
      "id": "5e510ba0",
      "execution_count": 189,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "821b80ad"
      },
      "source": [
        "### Using GridSearchCV to find the best parameters for regression and performing cross validation"
      ],
      "id": "821b80ad"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6aea3316"
      },
      "source": [
        "grid_model = GridSearchCV(estimator = base_model,\n",
        "                         param_grid = param_grid,\n",
        "                         scoring = 'neg_mean_squared_error',\n",
        "                         cv = 5,\n",
        "                         verbose = 1)"
      ],
      "id": "6aea3316",
      "execution_count": 190,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9c03b6af",
        "outputId": "1b2cc65c-3c9d-4cf1-8bb7-0513058d2f6a"
      },
      "source": [
        "grid_model.fit(X_train,y_train)"
      ],
      "id": "9c03b6af",
      "execution_count": 191,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 5 folds for each of 42 candidates, totalling 210 fits\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=ElasticNet(normalize=True),\n",
              "             param_grid={'alpha': [0.1, 1, 5, 10, 50, 100],\n",
              "                         'l1_ratio': [0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1]},\n",
              "             scoring='neg_mean_squared_error', verbose=1)"
            ]
          },
          "metadata": {},
          "execution_count": 191
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2c3efa7b",
        "outputId": "f2d8442b-4f39-47c1-9d37-25c40914b2ec"
      },
      "source": [
        "grid_model.best_params_"
      ],
      "id": "2c3efa7b",
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'alpha': 5, 'l1_ratio': 1}"
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jzUF38LqWFym",
        "outputId": "6b4d208f-eb5d-43e9-adcb-86d0ca25e1bf"
      },
      "source": [
        "grid_model.best_estimator_"
      ],
      "id": "jzUF38LqWFym",
      "execution_count": 193,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ElasticNet(alpha=5, l1_ratio=1, normalize=True)"
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3c489110"
      },
      "source": [
        "from sklearn.metrics import mean_squared_error"
      ],
      "id": "3c489110",
      "execution_count": 194,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4b2ea19b"
      },
      "source": [
        "y_pred = grid_model.predict(X_test)"
      ],
      "id": "4b2ea19b",
      "execution_count": 195,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "564ee0c3",
        "outputId": "4b56ca1e-11ab-43cf-b62c-df981a41562d"
      },
      "source": [
        "RMS = np.sqrt(mean_squared_error(y_test,y_pred))\n",
        "print(f'RMSE: {RMS}$') "
      ],
      "id": "564ee0c3",
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RMSE: 22076.164007857446$\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3ad33a0b",
        "outputId": "3d467252-7335-4bb6-a851-2cde9e53971d"
      },
      "source": [
        "RMS/(y_train.max() - y_train.min())"
      ],
      "id": "3ad33a0b",
      "execution_count": 197,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.029743784460022078"
            ]
          },
          "metadata": {},
          "execution_count": 197
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-nv8XSYicNUK"
      },
      "source": [
        "### ElascticNet has used LASSO model compeletely.\n",
        "### As LASSO model is known to shrink the coefficients to zero lets use a LASSO model to find the out relevant features."
      ],
      "id": "-nv8XSYicNUK"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b6h9AR3Icp8t"
      },
      "source": [
        "from sklearn.linear_model import LassoCV,Lasso"
      ],
      "id": "b6h9AR3Icp8t",
      "execution_count": 198,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zw9HQYT4cp6M"
      },
      "source": [
        "lasso = LassoCV()"
      ],
      "id": "Zw9HQYT4cp6M",
      "execution_count": 199,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TeBZcph-cp3U",
        "outputId": "d4aabf8f-55d5-44c8-ef48-1302fb9b5623"
      },
      "source": [
        "lasso.fit(X_train,y_train)"
      ],
      "id": "TeBZcph-cp3U",
      "execution_count": 200,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LassoCV()"
            ]
          },
          "metadata": {},
          "execution_count": 200
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TNJ5Aj05dJmn"
      },
      "source": [
        "lassocv_pred = lasso.predict(X_test)"
      ],
      "id": "TNJ5Aj05dJmn",
      "execution_count": 201,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GEAg_O42dJh8",
        "outputId": "7599fd0b-a08a-436a-dd28-c7836c21540b"
      },
      "source": [
        "RMS = np.sqrt(mean_squared_error(y_test,lasso_pred))\n",
        "print(f'RMSE: {RMS}$') "
      ],
      "id": "GEAg_O42dJh8",
      "execution_count": 202,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RMSE: 21967.56805747159$\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wYHw_GJo0BjN"
      },
      "source": [
        "### Interpretation"
      ],
      "id": "wYHw_GJo0BjN"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "EkUQqHfmdrrJ",
        "outputId": "a6b9dfc1-a5c2-451d-bedf-43ab21f33d1f"
      },
      "source": [
        "imp_feat = pd.DataFrame(X.columns,lasso.coef_).reset_index()\n",
        "imp_feat.columns = ['Coefficient', 'Feature']\n",
        "imp_feat = imp_feat[imp_feat['Coefficient']>1].sort_values('Coefficient',ascending=False)\n",
        "imp_feat"
      ],
      "id": "EkUQqHfmdrrJ",
      "execution_count": 203,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Coefficient</th>\n",
              "      <th>Feature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>27173.282806</td>\n",
              "      <td>Gr Liv Area</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11229.656521</td>\n",
              "      <td>Overall Qual</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10462.885460</td>\n",
              "      <td>Year Built</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>9180.070471</td>\n",
              "      <td>Total Bsmt SF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7823.134686</td>\n",
              "      <td>BsmtFin SF 1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>57.327205</td>\n",
              "      <td>Neighborhood_ClearCr</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>279</th>\n",
              "      <td>44.188846</td>\n",
              "      <td>Sale Type_Oth</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>43.079367</td>\n",
              "      <td>Lot Config_Inside</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>26.876284</td>\n",
              "      <td>Fence_GdWo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>1.088161</td>\n",
              "      <td>Roof Style_Hip</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>83 rows Ã— 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      Coefficient               Feature\n",
              "14   27173.282806           Gr Liv Area\n",
              "2    11229.656521          Overall Qual\n",
              "4    10462.885460            Year Built\n",
              "10    9180.070471         Total Bsmt SF\n",
              "7     7823.134686          BsmtFin SF 1\n",
              "..            ...                   ...\n",
              "76      57.327205  Neighborhood_ClearCr\n",
              "279     44.188846         Sale Type_Oth\n",
              "70      43.079367     Lot Config_Inside\n",
              "265     26.876284            Fence_GdWo\n",
              "128      1.088161        Roof Style_Hip\n",
              "\n",
              "[83 rows x 2 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 203
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 599
        },
        "id": "MN7KC7L8p_Om",
        "outputId": "f8517bbc-3d42-4811-822b-b41521db1175"
      },
      "source": [
        "plt.figure(figsize=(15,5), dpi = 200)\n",
        "sns.barplot(data=imp_feat.head(20), x = 'Feature', y ='Coefficient')\n",
        "plt.xticks(rotation=90);"
      ],
      "id": "MN7KC7L8p_Om",
      "execution_count": 204,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 3000x1000 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "43d121bf"
      },
      "source": [
        "### Thank You"
      ],
      "id": "43d121bf"
    }
  ]
}